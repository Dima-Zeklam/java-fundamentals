/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;
import java.nio.file.Path;
import java.nio.file.Paths;


import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    App classUnderTest = new App();

    @Test
    void appHasAGreeting() {

        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test
    void emptyFile() {
        String expect = "";
        Path pathemptyFile = Paths.get("C:\\Users\\STUDENT\\Desktop\\java-fundamentals\\java-fundamentals\\" +
                "linter\\app\\src\\test\\java\\linter\\resources\\emptyFile.js");
        assertEquals(expect, classUnderTest.lint(pathemptyFile));
    }

    @Test
    void noError() {
        String expect = "";
        Path pathNoError = Paths.get("C:\\Users\\STUDENT\\Desktop\\java-fundamentals\\java-fundamentals\\" +
                "linter\\app\\src\\test\\java\\linter\\resources\\noError.js");
        assertEquals(expect, classUnderTest.lint(pathNoError));
    }
    @Test
    void oneError() {
        String expect = "Line 5: Missing semicolon.\n";
        Path pathOneError = Paths.get("C:\\Users\\STUDENT\\Desktop\\java-fundamentals\\java-fundamentals\\" +
                "linter\\app\\src\\test\\java\\linter\\resources\\oneError.js");
        assertEquals(expect, classUnderTest.lint(pathOneError));
    }
    @Test
    void fewError() {
        String expect = "Line 11: Missing semicolon.\n"+ "Line 32: Missing semicolon.\n"  +"Line 70: Missing semicolon.\n" +
                "Line 101: Missing semicolon.\n";
        Path pathfewError = Paths.get("C:\\Users\\STUDENT\\Desktop\\java-fundamentals\\java-fundamentals\\linter\\" +
                "app\\src\\test\\java\\linter\\resources\\fewErrors.js");
        assertEquals(expect, classUnderTest.lint(pathfewError));
    }
    @Test
    void manyError() {
        String expect = "Line 11: Missing semicolon.\n"+
        "Line 13: Missing semicolon.\n"+
        "Line 15: Missing semicolon.\n"+
        "Line 26: Missing semicolon.\n"+
        "Line 28: Missing semicolon.\n"+
        "Line 32: Missing semicolon.\n"+
        "Line 36: Missing semicolon.\n"+
        "Line 40: Missing semicolon.\n"+ "Line 73: Missing semicolon.\n" + "Line 74: Missing semicolon.\n" +
        "Line 76: Missing semicolon.\n"+
        "Line 94: Missing semicolon.\n" +
        "Line 95: Missing semicolon.\n"+
        "Line 96: Missing semicolon.\n" +
        "Line 97: Missing semicolon.\n" +
        "Line 98: Missing semicolon.\n" +
        "Line 99: Missing semicolon.\n" +
        "Line 100: Missing semicolon.\n" +
        "Line 101: Missing semicolon.\n";
        Path pathManyError = Paths.get("C:\\Users\\STUDENT\\Desktop\\java-fundamentals\\java-fundamentals\\" +
                "linter\\app\\src\\test\\java\\linter\\resources\\manyErrors.js");
        assertEquals(expect, classUnderTest.lint(pathManyError));
    }
}
